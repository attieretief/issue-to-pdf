# action.yaml
name: 'Issue to PDF'
description: 'A GitHub Action to monitor and convert issues into PDF files within your repository.'
author: 'Attie Retief'
branding:
  icon: 'file'
  color: 'green'
inputs:
  token:
    description: Personal access token
    required: true
  label:
    description: Label on issue to trigger the update
    required: false
    default: 'publish'
  dest:
    required: false
    description: Destination path generated PDF files
    default: 'PDFs'    
  address:
    description: Company address to include on thee cover page
    required: true
    default: "<strong>COMPANY</strong><br>Address line 1<br>Address line 2<br>Address line 3<br>Address line 4<br>Company web address"
  css:
    description: CSS file to use for styling the markdown PDF
    required: false
    default: samples/spec.css

runs:
  using: 'composite'
  steps:
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install Dependencies
      run: pip install -r requirements.txt
      shell: bash
    - name: Pass Inputs to Shell
      run: |
              echo "TOKEN=${{ inputs.token }}" >> $GITHUB_ENV
              echo "DEST=${{ inputs.dest }}" >> $GITHUB_ENV
              echo "ADDRESS=${{ inputs.address }}" >> $GITHUB_ENV
              echo "CSS=${{ inputs.css }}" >> $GITHUB_ENV
              echo "NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
              echo "TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
              echo "BODY=${{ github.event.issue.body }}" >> $GITHUB_ENV
              echo "AUTHOR=${{ github.event.issue.user.name }}" >> $GITHUB_ENV
              echo "CREATED=${{ github.event.issue.created_at }}" >> $GITHUB_ENV
              echo "UPDATED=${{ github.event.issue.updated_at }}" >> $GITHUB_ENV
              echo "REPO=${{ github.event.repository }}" >> $GITHUB_ENV
      shell: bash
    - name: Generate the PDF
      id: make-pdf
      run: python src/make-pdf.py
      shell: bash
